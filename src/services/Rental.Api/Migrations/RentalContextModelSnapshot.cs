// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rental.Api.Data;

#nullable disable

namespace Rental.Api.Migrations
{
    [DbContext(typeof(RentalContext))]
    partial class RentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rental.Api.Entities.Courier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(18)")
                        .HasColumnName("cnpj");

                    b.Property<byte[]>("CreatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("DriverLicenseImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("driver_license_image_url");

                    b.Property<string>("DriverLicenseNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("driver_license_number");

                    b.Property<string>("DriverLicenseType")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("driver_license_type");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("full_name");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasDatabaseName("idx_courier_cnpj");

                    b.HasIndex("DriverLicenseNumber")
                        .IsUnique()
                        .HasDatabaseName("idx_courier_license_number");

                    b.HasIndex("FullName")
                        .HasDatabaseName("idx_courier_name");

                    b.ToTable("courier", "rental_service", t =>
                        {
                            t.HasCheckConstraint("chk_courier_license_type", "driver_license_type IN ('A', 'B', 'AB')");
                        });
                });

            modelBuilder.Entity("Rental.Api.Entities.Motorcycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("CreatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("model");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("plate");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("Plate")
                        .IsUnique()
                        .HasDatabaseName("idx_motorcycle_plate");

                    b.ToTable("motorcycle", "rental_service");
                });
#pragma warning restore 612, 618
        }
    }
}
